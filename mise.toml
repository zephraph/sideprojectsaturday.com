[tools]
node = "22.16.0"
pnpm = "10.12.1"

[settings]
experimental = true

[hooks]
postinstall = "pnpm install"

[env]
_.path = "node_modules/.bin"
_.file = ".env"

[tasks.dev]
description = "Start development server at localhost:4433"
run = "astro dev"

[tasks.build]
description = "Build for production"
run = "astro build"

[tasks.preview]
description = "Preview production build locally"
run = "wrangler dev ./dist/_worker.js"
depends = ["build"]

[tasks.astro]
description = "Run Astro CLI commands"
run = "astro"

[tasks.deploy]
description = "Deploy to Cloudflare via Alchemy"
run = "tsx alchemy.run.ts"

[tasks.destroy]
description = "Destroy Cloudflare resources"
run = "tsx alchemy.run.ts --destroy"

[tasks.fmt]
description = "Format code with Biome"
run = "biome check --write --unsafe ."

[tasks.emails]
description = "Preview email templates with react-email"
run = "email dev -d src/emails"

[tasks."open:deployment"]
description = "Open Cloudflare dashboard"
run = "open https://dash.cloudflare.com/${CLOUDFLARE_ACCOUNT_ID}/workers/services/view/sideprojectsaturday/production/metrics"

[tasks.logs]
description = "View production logs"
run = "wrangler tail sideprojectsaturday"

[tasks."gen:better-auth"]
description = "Generate better-auth types"
run = "npx @better-auth/cli@latest generate --config src/lib/auth.ts"

[tasks."migrate:create"]
description = "Create new migration"
run = '''
MIGRATION_OUTPUT=$(wrangler d1 migrations create sps-db {{arg(name="migration_name")}})
MIGRATION_FILE=$(echo "$MIGRATION_OUTPUT" | grep -o "prisma/migrations/[0-9]*_.*\.sql" | head -1)
LATEST_D1_DB=$(find .wrangler/state/v3/d1/miniflare-D1DatabaseObject -name "*.sqlite" -type f -exec ls -t {} + 2>/dev/null | head -1)
prisma migrate diff --from-url "file:$LATEST_D1_DB" --to-schema-datamodel ./prisma/schema.prisma --script --output "$MIGRATION_FILE"
'''

[tasks."migrate:dev"]
description = "Apply migrations locally"
run = ["prisma generate", "wrangler d1 migrations apply DB --local"]

[tasks."migrate:prod"]
description = "Apply migrations to production"
run = ["prisma generate", "wrangler d1 migrations apply DB --remote"]
