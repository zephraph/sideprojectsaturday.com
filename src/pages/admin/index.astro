---
import AdminLayout from "@/layouts/AdminLayout.astro";
import { db } from "@/lib/auth";
import { getCurrentWeekSaturdayDate } from "@/lib/date-utils";

db(Astro.locals.runtime.env);

// Get user statistics
const totalUsers = await db.user.count();
const rsvpedUsers = await db.user.count({ where: { rsvped: true } });
const subscribedUsers = await db.user.count({ where: { subscribed: true } });
const verifiedUsers = await db.user.count({ where: { emailVerified: true } });

// Get current week's Saturday
const currentWeekSaturday = getCurrentWeekSaturdayDate();

// Check if current week has an event
const currentWeekEvent = await db.event.findFirst({
	where: {
		eventDate: currentWeekSaturday,
	},
});

// Get next scheduled event
const nextEvent = await db.event.findFirst({
	where: {
		eventDate: { gte: new Date() },
		status: "scheduled",
	},
	orderBy: {
		eventDate: "asc",
	},
});

// Get recent user updates
const recentUsers = await db.user.findMany({
	take: 15,
	orderBy: { updatedAt: "desc" },
	select: {
		id: true,
		email: true,
		name: true,
		updatedAt: true,
	},
});

// Group users by update date
const groupedUsers = recentUsers.reduce((groups, user) => {
	const date = new Date(user.updatedAt).toLocaleDateString();
	if (!groups[date]) {
		groups[date] = [];
	}
	groups[date].push(user);
	return groups;
}, {});

// Get upcoming events count
const upcomingEventsCount = await db.event.count({
	where: {
		eventDate: { gte: new Date() },
		status: "scheduled",
	},
});

// Get active breaks count
const activeBreaksCount = await db.break.count({
	where: {
		endDate: { gte: new Date() },
	},
});
---

<AdminLayout title="Dashboard - Admin">
	<div class="max-w-7xl">
		<h1 class="text-3xl font-bold mb-8">Admin Dashboard</h1>

		<!-- Stats Overview -->
		<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8">
			<div class="stat bg-base-100 shadow rounded-box">
				<div class="stat-figure text-primary">
					<svg
						xmlns="http://www.w3.org/2000/svg"
						fill="none"
						viewBox="0 0 24 24"
						stroke-width="1.5"
						stroke="currentColor"
						class="w-8 h-8"
					>
						<path
							stroke-linecap="round"
							stroke-linejoin="round"
							d="M15 19.128a9.38 9.38 0 002.625.372 9.337 9.337 0 004.121-.952 4.125 4.125 0 00-7.533-2.493M15 19.128v-.003c0-1.113-.285-2.16-.786-3.07M15 19.128v.106A12.318 12.318 0 018.624 21c-2.331 0-4.512-.645-6.374-1.766l-.001-.109a6.375 6.375 0 0111.964-3.07M12 6.375a3.375 3.375 0 11-6.75 0 3.375 3.375 0 016.75 0zm8.25 2.25a2.625 2.625 0 11-5.25 0 2.625 2.625 0 015.25 0z"
						></path>
					</svg>
				</div>
				<div class="stat-title">Total Users</div>
				<div class="stat-value">{totalUsers}</div>
				<div class="stat-desc">All registered users</div>
			</div>

			<div class="stat bg-base-100 shadow rounded-box">
				<div class="stat-figure text-success">
					<svg
						xmlns="http://www.w3.org/2000/svg"
						fill="none"
						viewBox="0 0 24 24"
						stroke-width="1.5"
						stroke="currentColor"
						class="w-8 h-8"
					>
						<path
							stroke-linecap="round"
							stroke-linejoin="round"
							d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
						></path>
					</svg>
				</div>
				<div class="stat-title">RSVPed</div>
				<div class="stat-value text-success">{rsvpedUsers}</div>
				<div class="stat-desc">
					{((rsvpedUsers / totalUsers) * 100).toFixed(0)}% of users
				</div>
			</div>

			<div class="stat bg-base-100 shadow rounded-box">
				<div class="stat-figure text-info">
					<svg
						xmlns="http://www.w3.org/2000/svg"
						fill="none"
						viewBox="0 0 24 24"
						stroke-width="1.5"
						stroke="currentColor"
						class="w-8 h-8"
					>
						<path
							stroke-linecap="round"
							stroke-linejoin="round"
							d="M21.75 6.75v10.5a2.25 2.25 0 01-2.25 2.25h-15a2.25 2.25 0 01-2.25-2.25V6.75m19.5 0A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25m19.5 0v.243a2.25 2.25 0 01-1.07 1.916l-7.5 4.615a2.25 2.25 0 01-2.36 0L3.32 8.91a2.25 2.25 0 01-1.07-1.916V6.75"
						></path>
					</svg>
				</div>
				<div class="stat-title">Subscribed</div>
				<div class="stat-value text-info">{subscribedUsers}</div>
				<div class="stat-desc">
					{((subscribedUsers / totalUsers) * 100).toFixed(0)}% of users
				</div>
			</div>

			<div class="stat bg-base-100 shadow rounded-box">
				<div class="stat-figure text-warning">
					<svg
						xmlns="http://www.w3.org/2000/svg"
						fill="none"
						viewBox="0 0 24 24"
						stroke-width="1.5"
						stroke="currentColor"
						class="w-8 h-8"
					>
						<path
							stroke-linecap="round"
							stroke-linejoin="round"
							d="M9 12.75L11.25 15 15 9.75M21 12c0 1.268-.63 2.39-1.593 3.068a3.745 3.745 0 01-1.043 3.296 3.745 3.745 0 01-3.296 1.043A3.745 3.745 0 0112 21c-1.268 0-2.39-.63-3.068-1.593a3.746 3.746 0 01-3.296-1.043 3.745 3.745 0 01-1.043-3.296A3.745 3.745 0 013 12c0-1.268.63-2.39 1.593-3.068a3.745 3.745 0 011.043-3.296 3.746 3.746 0 013.296-1.043A3.746 3.746 0 0112 3c1.268 0 2.39.63 3.068 1.593a3.746 3.746 0 013.296 1.043 3.746 3.746 0 011.043 3.296A3.745 3.745 0 0121 12z"
						></path>
					</svg>
				</div>
				<div class="stat-title">Verified</div>
				<div class="stat-value text-warning">{verifiedUsers}</div>
				<div class="stat-desc">
					{((verifiedUsers / totalUsers) * 100).toFixed(0)}% of users
				</div>
			</div>
		</div>

		<!-- Quick Status -->
		<div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
			<!-- Event Status -->
			<div class="card bg-base-100 shadow-xl">
				<div class="card-body">
					<h2 class="card-title text-xl mb-4">
						<svg
							xmlns="http://www.w3.org/2000/svg"
							fill="none"
							viewBox="0 0 24 24"
							stroke-width="1.5"
							stroke="currentColor"
							class="w-6 h-6"
						>
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 012.25-2.25h13.5A2.25 2.25 0 0121 7.5v11.25m-18 0A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75m-18 0v-7.5A2.25 2.25 0 015.25 9h13.5A2.25 2.25 0 0121 11.25v7.5"
							></path>
						</svg>
						Event Status
					</h2>

					<div class="space-y-3">
						<!-- Current Week -->
						<div
							class="flex justify-between items-center p-3 bg-base-200 rounded-lg"
						>
							<div>
								<p class="font-semibold">This Saturday</p>
								<p class="text-sm text-base-content/70">
									{currentWeekSaturday.toLocaleDateString()}
								</p>
							</div>
							{
								currentWeekEvent ? (
									<div
										class={`badge ${currentWeekEvent.status === "scheduled" ? "badge-success" : currentWeekEvent.status === "inprogress" ? "badge-info" : currentWeekEvent.status === "completed" ? "badge-neutral" : "badge-error"} badge-lg`}
									>
										{currentWeekEvent.status}
									</div>
								) : (
									<span class="text-sm text-base-content/70">No event</span>
								)
							}
						</div>

						<!-- Next Event -->
						{
							nextEvent && (
								<div class="flex justify-between items-center p-3 bg-base-200 rounded-lg">
									<div>
										<p class="font-semibold">Next Event</p>
										<p class="text-sm text-base-content/70">
											{new Date(nextEvent.eventDate).toLocaleDateString()}
										</p>
									</div>
									<div class="badge badge-success badge-lg">scheduled</div>
								</div>
							)
						}

						<!-- Summary Stats -->
						<div class="divider"></div>
						<div class="grid grid-cols-2 gap-4 text-center">
							<div>
								<p class="text-2xl font-bold">{upcomingEventsCount}</p>
								<p class="text-sm text-base-content/70">Upcoming Events</p>
							</div>
							<div>
								<p class="text-2xl font-bold">{activeBreaksCount}</p>
								<p class="text-sm text-base-content/70">Active Breaks</p>
							</div>
						</div>
					</div>

					<div class="mt-6">
						<a href="/admin/events" class="btn btn-primary btn-block">
							Manage Events
						</a>
					</div>
				</div>
			</div>

			<!-- Recent Activity -->
			<div class="card bg-base-100 shadow-xl">
				<div class="card-body">
					<h2 class="card-title text-xl mb-4">
						<svg
							xmlns="http://www.w3.org/2000/svg"
							fill="none"
							viewBox="0 0 24 24"
							stroke-width="1.5"
							stroke="currentColor"
							class="w-6 h-6"
						>
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								d="M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z"></path>
						</svg>
						Recent User Updates
					</h2>

					<div class="space-y-4 max-h-96 overflow-y-auto">
						{
							Object.keys(groupedUsers).length > 0 ? (
								Object.entries(groupedUsers).map(([date, users]) => (
									<div class="space-y-2">
										<h3 class="text-xs font-semibold text-base-content/50 uppercase">
											{date}
										</h3>
										<div class="space-y-1">
											{users.map((user) => (
												<div class="flex justify-between items-center p-2 hover:bg-base-200 rounded-lg transition-colors">
													<div class="flex-1 min-w-0">
														<p class="text-sm font-medium truncate">
															{user.email}
														</p>
														<p class="text-xs text-base-content/70">
															{user.name || "No name"}
														</p>
													</div>
												</div>
											))}
										</div>
									</div>
								))
							) : (
								<p class="text-sm text-base-content/70 text-center py-8">
									No recent activity
								</p>
							)
						}
					</div>

					<div class="mt-6">
						<a href="/admin/users" class="btn btn-primary btn-block">
							View All Users
						</a>
					</div>
				</div>
			</div>
		</div>
	</div>
</AdminLayout>
