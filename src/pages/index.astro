---
import { actions } from "astro:actions";
import Layout from "../layouts/Layout.astro";
import BackgroundDecorations from "../components/BackgroundDecorations.astro";
import AuthenticatedUserSection from "../components/AuthenticatedUserSection.astro";
import MagicLinkSentSection from "../components/MagicLinkSentSection.astro";
import RegistrationFormSection from "../components/RegistrationFormSection.astro";
import NextEventCard from "../components/NextEventCard.astro";
import { db } from "../lib/auth";

// Handle action results
const magicLinkResult = Astro.getActionResult(actions.sendMagicLink);
const signOutResult = Astro.getActionResult(actions.signOut);

// Get user session from middleware
const user = Astro.locals.user;
const session = Astro.locals.session;

// If user is authenticated, fetch their rsvped and subscribed status
let userWithPreferences = null;
if (user) {
    try {
        db(Astro.locals.runtime.env);
        const dbUser = await db.user.findUnique({
            where: { id: user.id },
            select: { rsvped: true, subscribed: true },
        });

        userWithPreferences = {
            ...user,
            rsvped: dbUser?.rsvped ?? false,
            subscribed: dbUser?.subscribed ?? true,
        };
    } catch (error) {
        console.error("Error fetching user preferences:", error);
        userWithPreferences = {
            ...user,
            rsvped: false,
            subscribed: true,
        };
    }
}

// Calculate next Saturday
function getNextSaturday() {
    const now = new Date();
    const daysUntilSaturday = (6 - now.getDay()) % 7 || 7;
    const nextSaturday = new Date(now);
    nextSaturday.setDate(now.getDate() + daysUntilSaturday);

    return nextSaturday.toLocaleDateString("en-US", {
        weekday: "long",
        year: "numeric",
        month: "long",
        day: "numeric",
    });
}

const nextEventDate = getNextSaturday();

// Redirect after successful sign out
if (signOutResult && !signOutResult.error) {
    return Astro.redirect("/");
}
---

<Layout>
    <div
        class="min-h-screen flex flex-col items-center justify-center relative overflow-hidden -mt-16"
        style={{
            background:
                "linear-gradient(135deg, #fff8e7 0%, #ffeaa7 20%, #ffb347 35%, #87ceeb 60%, #4fc3f7 80%, #0288d1 100%)",
        }}
    >
        <BackgroundDecorations />

        <h1
            class="text-6xl md:text-7xl font-extrabold text-center relative z-10 mb-2 text-white font-sans tracking-tight"
            style={{
                textShadow:
                    "2px 2px 4px rgba(0,0,0,0.8), 0px 0px 8px rgba(0,0,0,0.6)",
            }}
        >
            Side Project Saturday
        </h1>

        <h2
            class="text-3xl md:text-4xl font-bold text-center relative z-10 mb-8 text-amber-400 font-sans"
            style={{
                textShadow:
                    "0 0 15px rgba(251, 191, 36, 0.8), 0 0 30px rgba(251, 191, 36, 0.6), 2px 2px 6px rgba(0,0,0,0.7), 0px 0px 4px rgba(0,0,0,0.5)",
            }}
        >
            9am to noon
        </h2>

        <p
            class="text-xl md:text-2xl font-medium text-center relative z-10 mb-8 text-white font-sans"
            style={{
                textShadow:
                    "2px 2px 4px rgba(0,0,0,0.8), 0px 0px 8px rgba(0,0,0,0.6)",
            }}
        >
            Brooklyn, NY
        </p>

        <div
            class="backdrop-blur-sm rounded-lg p-6 shadow-xl relative z-10 w-md mx-4 border border-white/30"
            style={{
                background: "rgba(255,255,255,0.85)",
            }}
        >
            <NextEventCard nextEventDate={nextEventDate} />
            {
                userWithPreferences && session ? (
                    <AuthenticatedUserSection user={userWithPreferences} />
                ) : magicLinkResult && !magicLinkResult.error ? (
                    <MagicLinkSentSection
                        message={magicLinkResult.data.message}
                    />
                ) : (
                    <RegistrationFormSection error={magicLinkResult?.error} />
                )
            }
        </div>
    </div>
</Layout>
