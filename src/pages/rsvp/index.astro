---
import NoUpcomingEvents from "@/components/rsvp/NoUpcomingEvents.astro";
import RsvpAlreadyConfirmed from "@/components/rsvp/RsvpAlreadyConfirmed.astro";
import RsvpError from "@/components/rsvp/RsvpError.astro";
import RsvpSuccess from "@/components/rsvp/RsvpSuccess.astro";
import Layout from "@/layouts/Layout.astro";
import { auth, db } from "@/lib/auth";
import { formatEventDate } from "@/lib/date-utils";

type RsvpState = "already-rsvped" | "success" | "error" | "no-event";

// Check if user is authenticated
const session = await auth.api.getSession({
	headers: Astro.request.headers,
});

// If not authenticated, redirect to login with callback
if (!session?.user) {
	const callbackURL = encodeURIComponent(Astro.url.pathname);
	return Astro.redirect(`/login?callback=${callbackURL}`);
}

// Process RSVP
let state: RsvpState = "no-event";
let nextEvent = null;
let eventDateStr = "";

try {
	db(Astro.locals.runtime.env);

	// Get next event
	nextEvent = await db.event.findFirst({
		where: {
			eventDate: {
				gte: new Date(),
			},
			status: {
				in: ["scheduled", "inprogress"],
			},
		},
		orderBy: {
			eventDate: "asc",
		},
	});

	if (!nextEvent) {
		state = "no-event";
	} else {
		eventDateStr = formatEventDate(new Date(nextEvent.eventDate));

		// Check current RSVP status
		const user = await db.user.findUnique({
			where: { id: session.user.id },
			select: { rsvped: true },
		});

		if (user?.rsvped) {
			state = "already-rsvped";
		} else {
			// Auto-RSVP the user
			try {
				await db.user.update({
					where: { id: session.user.id },
					data: { rsvped: true },
				});
				state = "success";
			} catch (error) {
				console.error("Error updating RSVP:", error);
				state = "error";
			}
		}
	}
} catch (error) {
	console.error("Error processing RSVP:", error);
	state = "error";
}
---

<Layout title="RSVP - Side Project Saturday">
  <div class="min-h-screen bg-gradient-to-br from-amber-50 to-orange-100 flex items-center justify-center p-4">
    <div class="max-w-md w-full">
      <div class="bg-white rounded-2xl shadow-xl p-8 text-center">
        <h1 class="text-3xl font-bold text-gray-800 mb-6">
          üéâ RSVP for Side Project Saturday
        </h1>

        {state === "already-rsvped" && <RsvpAlreadyConfirmed eventDateStr={eventDateStr} />}
        {state === "success" && <RsvpSuccess eventDateStr={eventDateStr} />}
        {state === "error" && <RsvpError />}
        {state === "no-event" && <NoUpcomingEvents />}
        
        <div class="mt-6">
          <a
            href="/"
            class="text-gray-600 hover:text-gray-800 text-sm underline"
          >
            ‚Üê Back to Dashboard
          </a>
        </div>
      </div>
    </div>
  </div>
</Layout>
