---
import Layout from "@/layouts/Layout.astro";
import { auth, db } from "@/lib/auth";
import RsvpAlreadyConfirmed from "@/components/rsvp/RsvpAlreadyConfirmed.astro";
import RsvpForm from "@/components/rsvp/RsvpForm.astro";
import NoUpcomingEvents from "@/components/rsvp/NoUpcomingEvents.astro";

// Check if user is authenticated
const session = await auth.api.getSession({
  headers: Astro.request.headers,
});

// If not authenticated, redirect to login with callback
if (!session?.user) {
  const callbackURL = encodeURIComponent(Astro.url.pathname);
  return Astro.redirect(`/login?callback=${callbackURL}`);
}

// If authenticated, get user's current RSVP status and next event
let userRsvped = false;
let nextEvent = null;

if (session?.user) {
  try {
    db(Astro.locals.runtime.env);

    const user = await db.user.findUnique({
      where: { id: session.user.id },
      select: { rsvped: true },
    });

    userRsvped = user?.rsvped || false;

    nextEvent = await db.event.findFirst({
      where: {
        eventDate: {
          gte: new Date(),
        },
        status: {
          in: ["scheduled", "inprogress"],
        },
      },
      orderBy: {
        eventDate: "asc",
      },
    });
  } catch (error) {
    console.error("Error fetching user/event data:", error);
  }
}

const eventDateStr = nextEvent
  ? new Date(nextEvent.eventDate).toLocaleDateString("en-US", {
      weekday: "long",
      year: "numeric",
      month: "long",
      day: "numeric",
    })
  : null;
---

<Layout title="RSVP - Side Project Saturday">
  <div class="min-h-screen bg-gradient-to-br from-amber-50 to-orange-100 flex items-center justify-center p-4">
    <div class="max-w-md w-full">
      <div class="bg-white rounded-2xl shadow-xl p-8 text-center">
        <h1 class="text-3xl font-bold text-gray-800 mb-6">
          ðŸŽ‰ RSVP for Side Project Saturday
        </h1>

        {nextEvent ? (
          <!-- RSVP Section -->
          <div id="rsvp-section">
            {userRsvped ? (
              <RsvpAlreadyConfirmed eventDateStr={eventDateStr!} />
            ) : (
              <RsvpForm eventDateStr={eventDateStr} />
            )}
          </div>
        ) : (
          <NoUpcomingEvents />
        )}
      </div>
    </div>
  </div>
</Layout>

<script>
  // RSVP button handling
  const rsvpButton = document.getElementById('rsvp-button') as HTMLButtonElement;
  const rsvpStatus = document.getElementById('rsvp-status') as HTMLDivElement;

  if (rsvpButton) {
    rsvpButton.addEventListener('click', async () => {
      rsvpButton.disabled = true;
      rsvpButton.textContent = 'ðŸ”„ Confirming...';
      rsvpStatus.textContent = 'Processing your RSVP...';
      rsvpStatus.className = 'mt-4 text-sm text-blue-600';

      try {
        const formData = new FormData();
        formData.append('rsvped', 'true');

        const response = await fetch('/api/rsvp-toggle', {
          method: 'POST',
          body: formData,
        });

        if (response.ok) {
          // Show success state
          // Show success state - keeping inline for dynamic insertion
          document.getElementById('rsvp-section')!.innerHTML = `
            <div class="text-center">
              <div class="text-6xl mb-4">ðŸŽ‰</div>
              <h2 class="text-2xl font-bold text-green-700 mb-4">
                You're On The List!
              </h2>
              <p class="text-gray-600 mb-4">
                Your RSVP has been confirmed. You'll receive a confirmation email with all the event details and a calendar invite.
              </p>
              <div class="bg-green-50 border border-green-200 rounded-lg p-4 mb-6">
                <p class="text-green-800 text-sm">
                  ðŸ“§ Check your inbox for the confirmation email with calendar invite
                </p>
              </div>
              <a
                href="/"
                class="inline-block bg-amber-600 hover:bg-amber-700 text-white font-bold py-2 px-4 rounded-lg transition-colors"
              >
                Back to Home
              </a>
            </div>
          `;
        } else {
          throw new Error('Failed to RSVP');
        }
      } catch (error) {
        console.error('RSVP error:', error);
        rsvpStatus.textContent = 'Failed to confirm RSVP. Please try again.';
        rsvpStatus.className = 'mt-4 text-sm text-red-600 font-medium';
        rsvpButton.textContent = 'ðŸŽ¯ RSVP Now';
        rsvpButton.disabled = false;
      }
    });
  }
</script>
